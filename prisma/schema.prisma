// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Score {
  id        Int      @id @default(autoincrement())
  playerName String
  score     Int
  gameType  String   @default("snake") // "snake" 或 "survivor"
  createdAt DateTime @default(now())
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  author    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
  emoji     String?   // 帖子emoji（可选）
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  author    String
  createdAt DateTime @default(now())
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Plant {
  id          Int      @id @default(autoincrement())
  tempUserId  String   // 临时用户ID
  plantType   String   // 植物类型: "small_tree", "medium_tree", "large_tree", "rare_tree", "flower", "bush", "palm_tree", "cherry_blossom", "rainbow_flower"
  plantName   String?  // 植物名称（可选）
  ownerName   String   // 种植者名字
  positionX   Int      // X坐标
  positionY   Int      // Y坐标
  score       Int      // 种植时使用的分数
  plantedAt   DateTime @default(now())
}

model TempUser {
  id           String   @id // 临时用户ID
  seeds        Int      @default(0)
  lastActivity DateTime @default(now())
  createdAt    DateTime @default(now())
  expiresAt    DateTime // 过期时间（24小时后）
}

model Bottle {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  isActive      Boolean         @default(true)
  lastTouchedAt DateTime        @default(now())
  messages      BottleMessage[]
}

model BottleMessage {
  id        Int      @id @default(autoincrement())
  bottleId  Int
  author    String
  content   String
  createdAt DateTime @default(now())
  bottle    Bottle   @relation(fields: [bottleId], references: [id], onDelete: Cascade)
} 